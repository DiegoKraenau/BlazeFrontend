{"version":3,"sources":["components/TableCustomers.jsx","components/AddCustomer.jsx","App.js","reportWebVitals.js","index.js"],"names":["TableCustomers","useState","setGridApi","setGridColumnApi","rowData","setRowData","history","useHistory","useEffect","axios","get","then","res","data","className","style","height","width","onClick","push","onGridReady","params","api","columnApi","payload","paginationPageSize","customersPerPage","pagination","field","AddCustomer","useForm","register","errors","handleSubmit","loading","setLoading","firtsName","lastName","email","phoneNumber","customer","setCustomer","onChange","e","target","name","value","noValidate","autoComplete","TextField","id","label","variant","fullWidth","type","post","Swal","fire","response","isConfirmed","to","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f05a5f02.chunk.js","sourcesContent":["import { Fragment, React, useEffect, useState } from 'react';\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport axios from 'axios';\r\nimport LoadingScreen from 'loading-screen-kraenau';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst TableCustomers = () => {\r\n\r\n    const [gridApi, setGridApi] = useState(null);\r\n    const [gridColumnApi, setGridColumnApi] = useState(null);\r\n    const [rowData, setRowData] = useState(null);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        axios.get(`https://blazeproject.herokuapp.com/api/customers`)\r\n            .then(res => {\r\n                setRowData(res.data)\r\n            })\r\n    }, [])\r\n\r\n\r\n    function onGridReady(params) {\r\n        setGridApi(params.api);\r\n        setGridColumnApi(params.columnApi);\r\n    }\r\n\r\n    const changeView = () =>{\r\n        history.push('/addCustomer')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                rowData === null ? (\r\n                    <LoadingScreen></LoadingScreen>\r\n                ) : (\r\n                    <div className=\"center\">\r\n                        <div className=\"ag-theme-alpine\" style={{ height: 550, width: 1050 }}>\r\n                            <button onClick={()=>changeView()}>Add customer</button>\r\n                            {\r\n                                <AgGridReact\r\n                                    onGridReady={onGridReady}\r\n                                    rowData={rowData.payload}\r\n                                    paginationPageSize={rowData.customersPerPage}\r\n                                    pagination={true}>\r\n                                    <AgGridColumn field=\"id\"></AgGridColumn>\r\n                                    <AgGridColumn field=\"firtsName\"></AgGridColumn>\r\n                                    <AgGridColumn field=\"lastName\"></AgGridColumn>\r\n                                    <AgGridColumn field=\"email\"></AgGridColumn>\r\n                                    <AgGridColumn field=\"phoneNumber\"></AgGridColumn>\r\n                                </AgGridReact>\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default TableCustomers;","import { TextField } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport Swal from 'sweetalert2';\r\nimport LoadingScreen from 'loading-screen-kraenau';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddCustomer = () => {\r\n\r\n    const { register, errors, handleSubmit } = useForm()\r\n    const [loading, setLoading] = useState(false)\r\n    const [customer, setCustomer] = useState({\r\n        firtsName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phoneNumber: ''\r\n    })\r\n    const history = useHistory()\r\n\r\n    const onChange = (e) => {\r\n        setCustomer(\r\n            {\r\n                ...customer,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        )\r\n    };\r\n\r\n    const add = () => {\r\n        setLoading(true)\r\n        axios.post(`https://blazeproject.herokuapp.com/api/customers`,customer)\r\n            .then(res => {\r\n                if(res.data){\r\n                    setLoading(false)\r\n                    Swal.fire(\r\n                        'Good job!',\r\n                        'A customer was registered!',\r\n                        'success'\r\n                      ).then(response=>{\r\n                          if(response.isConfirmed){\r\n                            history.push('/')\r\n                          }\r\n                      })\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"center\">\r\n            {\r\n                loading === true && (\r\n                    <LoadingScreen></LoadingScreen>\r\n                )\r\n            }\r\n            <form noValidate autoComplete=\"off\">\r\n                <h2>Add Customer Form</h2>\r\n                <TextField\r\n                    name=\"firtsName\"\r\n                    value={customer.firtsName}\r\n                    onChange={(e) => onChange(e)}\r\n                    className=\"input\"\r\n                    id=\"outlined-basic\"\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    name=\"lastName\"\r\n                    value={customer.lastName}\r\n                    onChange={(e) => onChange(e)}\r\n                    className=\"input\"\r\n                    id=\"outlined-basic\"\r\n                    label=\"LastName\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={customer.email}\r\n                    onChange={(e) => onChange(e)}\r\n                    className=\"input\"\r\n                    id=\"outlined-basic\"\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    name=\"phoneNumber\"\r\n                    type=\"number\"\r\n                    value={customer.phoneNumber}\r\n                    onChange={(e) => onChange(e)}\r\n                    className=\"input\"\r\n                    id=\"outlined-basic\"\r\n                    label=\"Phone Number\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                />\r\n                <button type=\"button\" onClick={() => add()}>Add Customer</button>\r\n                <Link to=\"/\">Back</Link>\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCustomer;","\nimport './App.scss';\nimport TableCustomers from './components/TableCustomers';\n\nimport React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport AddCustomer from './components/AddCustomer';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <p className=\"firma\">Designed by @DiegoKraenau</p>\n        <Switch>\n          <Route path=\"/\" exact>\n            <TableCustomers />\n          </Route>\n          <Route path=\"/addCustomer\" exact>\n            <AddCustomer />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}